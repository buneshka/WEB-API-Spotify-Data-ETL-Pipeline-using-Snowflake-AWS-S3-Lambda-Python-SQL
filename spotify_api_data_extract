import json
import os
import requests
import base64
import pandas as pd
import boto3

def lambda_handler(event, context):
    
    # Your Spotify API credentials in environmental variables
    client_id = os.environ['client_id']
    client_secret = os.environ['client_secret']
    # Encode client_id and client_secret to Base64 (like Buffer in JS)
    credentials = f"{client_id}:{client_secret}"
    encoded_credentials = base64.b64encode(credentials.encode()).decode()

    # Spotify API token endpoint
    token_url = "https://accounts.spotify.com/api/token"

    # Request headers
    headers = {
    "Authorization": f"Basic {encoded_credentials}",
    "Content-Type": "application/x-www-form-urlencoded"
    }

    # Request body
    data = {
        "grant_type": "client_credentials"
    }

    # Send POST request to get access token
    response = requests.post(token_url, headers=headers, data=data)

    # Handle response
    if response.status_code == 200:
        token_data = response.json()
        access_token = token_data["access_token"]
        print("Access Token:", access_token)
    else:
        print("Error fetching token:", response.status_code, response.json())

    # Spotify API endpoint for the artist (replace with the desired artist ID)
    artist_id = "2YZyLoL8N0Wb9xBt1NhZWg"
    endpoint = f"https://api.spotify.com/v1/artists/{artist_id}/top-tracks"

    # Set up the Authorization header
    headers = {
        "Authorization": f"Bearer {access_token}"
    }

    # Make a GET request to fetch artist data
    response = requests.get(endpoint, headers=headers)

    # Check if the request was successful
    if response.status_code == 200:
        artist_data = response.json()
        print(json.dumps(artist_data, indent=2))  # Pretty-print the artist data
    else:
        print("Error:", response.status_code, response.json())

    client = boto3.client('s3')
    bucket_name = 'spotify-etl-project-buneshka'

    # Convert the artist data to JSON string
    artist_data_json = json.dumps(artist_data)

    try:
        # Upload the full artist_data JSON to S3
        client.put_object(
            Body=artist_data_json,
            Bucket=bucket_name,
            Key='raw_data/to_processed/artist_data.json'
        )
        print("✅ Data successfully uploaded to S3!")
    except Exception as e:
        print("❌ Error uploading to S3:", str(e))

